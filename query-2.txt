1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

	SELECT `students`.*, `degrees`.`name` AS `corso_laurea`
	FROM `students`
	INNER JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
	WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze

	SELECT `degrees`.*, `departments`.`name` AS `nome_dipartimento`
	FROM `degrees`
	INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
	WHERE `departments`.`name` = 'Dipartimento di Neuroscienze';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

	SELECT `courses`.* , 
	CONCAT (`teachers`.`name`, ' ', `teachers`.`surname` ) AS `docente` 
	FROM `courses`
	INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
	INNER JOIN `teachers` ON  `teachers`.`id` =  `course_teacher`.`teacher_id`
	WHERE `teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

	SELECT *
	FROM `students`
	INNER JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
	INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`  
	ORDER BY `students`.`surname` ASC, `students`.`name` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

	SELECT * 
	FROM `degrees`
	INNER JOIN `courses` ON `courses`.`degree_id` = `degrees`.`id`
	INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
	INNER JOIN `teachers` ON  `teachers`.`id` =  `course_teacher`.`teacher_id`  
	ORDER BY `degrees`.`id` ASC;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

	SELECT `teachers`.* , `departments`.`name` AS `nome_dipartimento` 
	FROM `teachers`
	INNER JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
	INNER JOIN `courses` ON `courses`.`id` = `course_teacher`.`course_id`
	INNER JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`
	INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
	WHERE `departments`.`name` = 'Dipartimento di Matematica'
	GROUP BY `teachers`.`id`

7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami

	SELECT `student_id` AS `studente`,  `exams`.`course_id` AS `esame_superato`, 
	COUNT(`courses`.`id`) AS `tentativi` 
	FROM `exam_student`
	INNER JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
	INNER JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
	GROUP BY `studente`, `esame_superato` 
	HAVING (COUNT(`courses`.`id`) - COUNT(CASE WHEN `exam_student`.`vote` <18 THEN 1 END)) > 0
	ORDER BY `studente` ASC



<------------------------------------------------------------------------------------------->
	SELECT `student_id` AS `studente`,  `exams`.`course_id` AS `esame`, 
	COUNT(`courses`.`id`) AS `tentativi`, 
	COUNT(CASE WHEN `exam_student`.`vote` <18 THEN 1 END) AS `fallimenti`,
	(COUNT(`courses`.`id`) - COUNT(CASE WHEN `exam_student`.`vote` <18 THEN 1 END)) AS `superato`
	FROM `exam_student`
	INNER JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
	INNER JOIN `courses` ON `courses`.`id` = `exams`.`course_id`
	GROUP BY `studente`, `esame` 
	ORDER BY `studente` ASC;